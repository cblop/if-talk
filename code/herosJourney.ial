institution story;
% TYPES ----------
type Identity;
type Agent;
type Role;
type Trope;
type Phase;
type Place;
type PlaceName;
type Object;
type ObjectName;

% FLUENTS ----------
fluent role(Agent, Role);
fluent phase(Trope, Phase);
fluent place(PlaceName, Place);
fluent object(ObjectName, Object);
fluent at(Agent, Place);

% EXTERNAL EVENTS: The Hero's Journey ----------
exogenous event gets(Agent, ObjectName);
exogenous event go(Agent, PlaceName);
exogenous event meet(Agent, Agent);
exogenous event noDeadline(Identity);

% VIOLATION EVENTS: The Hero's Journey ----------
violation event noViolation(Identity);

% INST EVENTS: The Hero's Journey ----------
inst event intHerosJourney(Agent, Agent, ObjectName, PlaceName);



% INITIATES: The Hero's Journey ----------
intHerosJourney(R, S, T, U) initiates
    phase(herosJourney, phaseA),
    perm(go(R, U)) if
        phase(herosJourney, inactive),
        role(R, hero),
        place(U, home);
intHerosJourney(R, S, T, U) initiates
    phase(herosJourney, phaseB),
    perm(meet(R, S)) if
        phase(herosJourney, phaseA),
        role(R, hero),
        role(S, dispatcher);
intHerosJourney(R, S, T, U) initiates
    phase(herosJourney, phaseC),
    perm(gets(R, T)) if
        phase(herosJourney, phaseB),
        role(R, hero),
        object(T, weapon);
intHerosJourney(R, S, T, U) initiates
    phase(herosJourney, phaseD),
    perm(go(R, U)) if
        phase(herosJourney, phaseC),
        role(R, hero),
        place(U, home);
intHerosJourney(R, S, T, U) initiates
    phase(herosJourney, done) if
        phase(herosJourney, phaseD);


% TERMINATES: The Hero's Journey ----------
intHerosJourney(R, S, T, U) terminates
    phase(herosJourney, inactive) if
        phase(herosJourney, inactive);
intHerosJourney(R, S, T, U) terminates
    phase(herosJourney, phaseA),
    perm(go(R, U)) if
        phase(herosJourney, phaseA);
intHerosJourney(R, S, T, U) terminates
    phase(herosJourney, phaseB),
    perm(meet(R, S)) if
        phase(herosJourney, phaseB);
intHerosJourney(R, S, T, U) terminates
    phase(herosJourney, phaseC),
    perm(gets(R, T)) if
        phase(herosJourney, phaseC);
intHerosJourney(R, S, T, U) terminates
    phase(herosJourney, phaseD),
    perm(go(R, U)) if
        phase(herosJourney, phaseD);
intHerosJourney(R, S, T, U) terminates
    phase(herosJourney, done) if
        phase(herosJourney, done);


% GENERATES: The Hero's Journey ----------
meet(R, S) generates
    intHerosJourney(R, S, T, U) if
        role(R, hero),
        role(S, dispatcher);
go(R, U) generates
    intHerosJourney(R, S, T, U) if
        role(R, hero),
        place(U, home);
gets(R, T) generates
    intHerosJourney(R, S, T, U) if
        role(R, hero),
        object(T, weapon);



% INITIALLY: -----------
initially
    perm(go(R, U)) if role(R, hero), place(U, home);
initially
    pow(intHerosJourney(R, S, T, U)) if R != S, S != T, T != U;
initially
    phase(herosJourney, phaseA),
    role(lukeSkywalker, hero),
    role(obiWan, dispatcher),
    place(tatooine, home),
    object(lightSaber, weapon);
